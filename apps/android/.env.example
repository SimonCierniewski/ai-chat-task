# =======================================
# Android App Environment Variables
# =======================================
# NOTE: Android doesn't use .env files directly
# These values should be configured in:
# 1. local.properties (git-ignored)
# 2. gradle.properties
# 3. BuildConfig fields
# 4. Native Android: strings.xml with build variants
# 5. React Native: react-native-config or similar

# This file serves as DOCUMENTATION for required environment variables
# DO NOT put actual secrets here

# =======================================
# Supabase Configuration
# =======================================
# For React Native: Use react-native-config or react-native-dotenv
# For Native: Add to local.properties and access via BuildConfig
SUPABASE_URL=https://xxxxxxxxxxxxxxxxxxxx.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxxxxxxxxxxx

# =======================================
# API Configuration
# =======================================
# Development
API_BASE_URL=http://10.0.2.2:3000/api  # Android emulator localhost
# API_BASE_URL=http://192.168.1.x:3000/api  # Physical device on same network

# Production (EU Region)
# API_BASE_URL=https://api.yourdomain.eu/api

# =======================================
# Deep Linking Configuration
# =======================================
# Used for app navigation from external sources
APP_DEEPLINK_SCHEME=myapp
APP_DEEPLINK_HOST=app.yourdomain.eu

# Example deep link: myapp://app.yourdomain.eu/chat/123
# Configure in AndroidManifest.xml:
# <intent-filter>
#   <action android:name="android.intent.action.VIEW" />
#   <category android:name="android.intent.category.DEFAULT" />
#   <category android:name="android.intent.category.BROWSABLE" />
#   <data android:scheme="myapp" android:host="app.yourdomain.eu" />
# </intent-filter>

# =======================================
# Push Notifications
# =======================================
# Firebase Cloud Messaging (if using)
# FCM_SERVER_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxx
# FCM_SENDER_ID=123456789012

# =======================================
# Analytics & Monitoring
# =======================================
# Sentry (EU Region)
# SENTRY_DSN=https://xxxxxxxxxxxxxxxxx@oEU.ingest.sentry.io/xxxxxxxxx
# SENTRY_ENVIRONMENT=development

# Google Analytics (if required)
# GA_TRACKING_ID=UA-XXXXXXXXX-X

# =======================================
# Feature Flags
# =======================================
# BUILD_VARIANT=debug  # debug, staging, release
# ENABLE_CRASHLYTICS=false
# ENABLE_ANALYTICS=false
# ENABLE_DEBUG_MENU=true

# =======================================
# Build Configuration
# =======================================
# App versioning
# VERSION_CODE=1
# VERSION_NAME=0.0.1

# Signing (NEVER commit these!)
# KEYSTORE_FILE=../keystores/release.keystore
# KEYSTORE_PASSWORD=xxxxxxxxxxxx
# KEY_ALIAS=my-key-alias
# KEY_PASSWORD=xxxxxxxxxxxx

# =======================================
# IMPORTANT: Configuration Methods
# =======================================

# For React Native:
# 1. Install: npm install react-native-config
# 2. Create .env.development, .env.staging, .env.production
# 3. Access: import Config from 'react-native-config';
#           const apiUrl = Config.API_BASE_URL;

# For Native Android (Kotlin/Java):
# 1. Add to local.properties:
#    supabase.url=https://xxxx.supabase.co
#    supabase.anonKey=eyJhbGc...
#
# 2. In app/build.gradle:
#    def localProperties = new Properties()
#    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
#
#    android {
#      defaultConfig {
#        buildConfigField "String", "SUPABASE_URL", "\"${localProperties['supabase.url']}\""
#        buildConfigField "String", "SUPABASE_ANON_KEY", "\"${localProperties['supabase.anonKey']}\""
#      }
#    }
#
# 3. Access in code:
#    val supabaseUrl = BuildConfig.SUPABASE_URL

# =======================================
# Security Notes
# =======================================
# 1. NEVER commit local.properties
# 2. Use ProGuard/R8 to obfuscate BuildConfig in release builds
# 3. Consider certificate pinning for API calls
# 4. Store truly sensitive keys in Android Keystore
# 5. Use build variants for different environments