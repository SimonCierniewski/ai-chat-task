# Build stage
FROM node:20-alpine AS builder

# Install pnpm and build dependencies
RUN apk add --no-cache python3 make g++ && \
    npm install -g pnpm@9.15.5

WORKDIR /app

# Copy all workspace configuration files
COPY pnpm-workspace.yaml ./
COPY pnpm-lock.yaml ./
COPY tsconfig.base.json ./

# Create minimal root package.json if it doesn't exist properly
COPY package.json ./

# Create .npmrc for pnpm settings
RUN echo "auto-install-peers=true" > .npmrc && \
    echo "strict-peer-dependencies=false" >> .npmrc && \
    echo "shamefully-hoist=true" >> .npmrc

# Copy package.json files for all workspaces first
COPY packages/shared/package.json packages/shared/
COPY apps/api/package.json apps/api/

# Install ALL dependencies (including dev dependencies for building)
# Using --no-frozen-lockfile for flexibility with lockfile mismatches
RUN pnpm install --no-frozen-lockfile

# Now copy source code
COPY packages/shared packages/shared/
COPY apps/api apps/api/

# Build shared package first
WORKDIR /app/packages/shared
RUN pnpm build

# Build API
WORKDIR /app/apps/api  
RUN pnpm build

# Runtime stage
FROM node:20-alpine

WORKDIR /app

# Copy everything from builder (already built)
COPY --from=builder /app ./

# Remove dev dependencies and source files to reduce image size
RUN rm -rf packages/shared/src apps/api/src \
    packages/shared/*.ts apps/api/*.ts \
    packages/shared/tsconfig.json apps/api/tsconfig.json

# Set environment
ENV NODE_ENV=production

# Expose port (Railway will override with PORT env var)
EXPOSE 3000

# Set working directory to API app
WORKDIR /app/apps/api

# Start the application
CMD ["node", "dist/index.js"]